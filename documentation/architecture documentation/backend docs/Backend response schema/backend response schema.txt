=============================================================================SECTION==================================================================================
PROPERTIES METADATA - ENUMS
=============================================================================SECTION==================================================================================

SECTION = HEADER|NAVBAR|MAIN|TABLE|LIST|ASIDE|FOOTER|ALERT
ARRANGE = VERTICALLY|HORITANLTALLY
COLOR = BLACK|BLUE|BROWN|GRAY|GREEN|ORANGE|PURPLE|RED|WHITE|YELLOW
DECORATION = BOLD|ITALIC|UNDERLINED|BOLD_ITALIC|BOLD_UNDERLINED|ITALIC_UNDERLINED
FONT_STYLE = ARIAL|BRUSH_SCRIPT_MT|COURIER_NEW|GARAMOND|GEORGIA|TAHOMA|TIMES_NEW_ROMAN|VERDANA
POSITION = ABOVE|BELOW|LEFT|RIGHT
INPUT_TYPE = SEARCH|TEXT_INPUT
VIDEO_QUALITY = 144|240|360|480|720|1080
SIZE = SMALL|MEDIUM|BIG
BOOLEAN = TRUE|FALSE
BUTTON_TYPE = CANCEL|DOWNLOAD|EDIT|RESET|SAVE|SUBMIT|NONE
SLIDER_TYPE = ZOOM|OPACITY
BORDER_STYLE = DASHED|DOTTED|DOUBLE|GROOVE|SOLID
LIST_TYPE = ORDERED|UNORDORED
MARKER = DECIMAL|LOWER_ALPHA|LOWER_LATIN|UPPER_ALPHA|UPPER_LATIN|CIRCLE|DISC|SQUARE

=============================================================================SECTION==================================================================================
PROPERTIES METADATA - EXPLAINED IN NATURAL LANGUAGE
=============================================================================SECTION==================================================================================

SOURCE -> Image|Video|Audio reference to where the file is found.
BUTTON_SOURCE -> SOURCE or empty string.
REFERENCE -> HTTP web reference.
LENGTH -> Video|Audio playtime duration in minutes.
TEXT -> String representing the text to be displayed.
FONT_SIZE -> Integer representing the size of the displayed text in pixels.
DELAY -> Integer representing the delay to wait before an alert appears.
PHOTO_NUMBER -> Number of photos that should be displayed in this photo gallery.
VALUE -> Integer value representing how low|high a slider can go.
NUMBER -> Integer value > 0 representing number of columns/rows in a table or number of elements.
BORDER_WIDTH -> Integer value > 0 representing the border width of a table.
ERROR_REASON -> Why the error occured.
POSITION_IN_TEXT -> Where the error occured.

=============================================================================SECTION==================================================================================
STRUCTURAL SUBELEMENTS CONCEPTUAL REPRESENTATION SECTION
=============================================================================SECTION==================================================================================

MATRIX = matrix of lists of COMPOSITIONAL elements
example: [
		  [paragraph:.., paragraph:.., paragraph:..]
		  [image:.., image:.., image:..]
		  [button:.., button:.., button:..]
		 ]

LIST_ELEMENTS = list of pair (NUMBER, COMPONENT element, POSITION)
example: [{apparitions: 3, element: paragraph:.., position: POSITION}, {apparitions: 2, element: image:.., position: POSITION}]

=============================================================================SECTION==================================================================================
JSON RESPONSE SECTION
=============================================================================SECTION==================================================================================

{
	status: "ERROR",
	response: {
		reason: ERROR_REASON,
		positionInText: POSITION_IN_TEXT
	}
}


{
	status: "SUCCESS"
	response: {
		sections: ["HEADER", "NAVBAR", "MAIN|TABLE|LIST", "ASIDE", "FOOTER", "ALERT"]
		header: {
			..
		},
		navbar: {
			..
		},
		main|table|list: {
			..
		},
		aside: {
			..
		},
		footer: {
			..
		},
		alert: {
			..
		}
	}
}

=============================================================================SECTION==================================================================================
STRUCTURAL ELEMENTS SECTION
=============================================================================SECTION==================================================================================

main: {
	backgroundColor: COLOR,
	sectionArrange: ARRANGE,
	listSize: NUMBER,
	elements: LIST_ELEMENTS
}

header: {
	backgroundColor: COLOR,
	sectionArrange: ARRANGE,
	listSize: NUMBER,
	elements: LIST_ELEMENTS
}

footer: {
	backgroundColor: COLOR,
	sectionArrange: ARRANGE,
	listSize: NUMBER,
	elements: LIST_ELEMENTS
}

aside: {
	backgroundColor: COLOR,
	sectionArrange: ARRANGE,
	listSize: NUMBER,
	elements: LIST_ELEMENTS
}

navBar: {
	backgroundColor: COLOR,
	listSize: NUMBER,
	elements: [link:.., link:.., ..]
}

list: {
	listType: LIST_TYPE,
	listMarker: MARKER,
	listSize: NUMBER,
	elements: LIST_ELEMENTS
}

table: {
	backgroundColor: COLOR,
	numberLines: NUMBER,
	numberColumns: NUMBER,
	borderColor: COLOR, 
	borderStyle: BORDER_STYLE, 
	borderWidth: BORDER_WIDTH, 
	matrix: MATRIX
}

=============================================================================SECTION==================================================================================
COMPOSITIONAL ELEMENTS SECTION
=============================================================================SECTION==================================================================================

textProperties: {
	fontColor: COLOR, 
	fontStyle: FONT_STYLE,
	fontSize: SIZE
	fontDecotation: DECORATION
}

paragraph: {
	backgroundColor: COLOR,
	text: TEXT,
	textProperties: ..
}

heading: {
	backgroundColor: COLOR,
	text: TEXT,
	textProperties: ..
}

alert: {
	text: TEXT,
	delay: DELAY
}

link: {
	backgroundColor: COLOR,
	text: TEXT,
	reference: REFERENCE,
	textProperties: ..
}

input: {
	type: INPUT_TYPE, 
	size: SIZE,
	backgroundColor: COLOR,
	textProperties: ..
}

video: {
	size: SIZE,
	looped: BOOLEAN,
	videoLength: LENGTH,
	source: SOURCE,
	quality: VIDEO_QUALITY
}

audio: {
	size: SIZE,
	looped: BOOLEAN,
	audioLength: LENGTH,
	source: SOURCE
}

button: {
	disabled: BOOLEAN,
	size: SIZE,
	type: BUTTON_TYPE,
	image: BUTTON_SOURCE
}

image: {
	size: SIZE,
	source: SOURCE
}

photoGallery: {
	size: SIZE,
	backgroundColor: COLOR,
	photoNumber: PHOTO_NUMBER,
	images: [SOURCE, SOURCE, ..]
}

slider: {
	sliderType: SLIDER_TYPE,
	minValue: VALUE,
	maxValue: VALUE
}

profile: {
	size: SIZE,
	backgroundColor: COLOR,
	text: TEXT,
	textProperties: ..,
	source: SOURCE
}

calendar: {
	size: SIZE,
}